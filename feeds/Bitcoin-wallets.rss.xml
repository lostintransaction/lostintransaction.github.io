<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>Lost in Transaction: A neophyte explores Bitcoin: Posts tagged 'Bitcoin wallets'</title>
  <description>Lost in Transaction: A neophyte explores Bitcoin: Posts tagged 'Bitcoin wallets'</description>
  <link>http://www.lostintransaction.com/tags/Bitcoin-wallets.html</link>
  <lastBuildDate>Wed, 09 Apr 2014 03:02:03 UTC</lastBuildDate>
  <pubDate>Wed, 09 Apr 2014 03:02:03 UTC</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Computing a Bitcoin Address, Part 4: Wallet Import Format (WIF)</title>
   <link>http://www.lostintransaction.com/blog/2014/04/09/computing-a-bitcoin-address-part-4-wallet-import-format-wif/?utm_source=Bitcoin-wallets&amp;utm_medium=RSS</link>
   <guid>urn:http-www-lostintransaction-com:-blog-2014-04-09-computing-a-bitcoin-address-part-4-wallet-import-format-wif</guid>
   <pubDate>Wed, 09 Apr 2014 03:02:03 UTC</pubDate>
   <description>
&lt;html&gt;&lt;img src="http://www.lostintransaction.com/img/1x1.gif?utm_source=Bitcoin-wallets&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=%2Fblog%2F2014%2F04%2F09%2Fcomputing-a-bitcoin-address-part-4-wallet-import-format-wif%2F" height="1" width="1" /&gt;
 &lt;p&gt;In previous posts, we figured out how to compute a Bitcoin address from a private key, using an example from the Bitcoin wiki. In this post we try to convert a private key generated from an actual (MultiBit) wallet to an address.&lt;/p&gt;
 &lt;p&gt;I created a new wallet in MultiBit and it generated address &lt;code&gt;1G9dbCmxtbaBQACVgcHWHJgyr8ZNCiVL9j&lt;/code&gt;. I then exported the private key associated with this address into a file. Here&amp;rsquo;s the contents of that file:&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;# KEEP YOUR PRIVATE KEYS SAFE !
# Anyone who can read this file can spend your bitcoin.
#
# Format:
#   &amp;lt;Base58 encoded private key&amp;gt;[&amp;lt;whitespace&amp;gt;[&amp;lt;key createdAt&amp;gt;]]
#
#   The Base58 encoded private keys are the same format as
#   produced by the Satoshi client/ sipa dumpprivkey utility.
#
#   Key createdAt is in UTC format as specified by ISO 8601
#   e.g: 2011-12-31T16:42:00Z . The century, 'T' and 'Z' are mandatory
#
L3S9k3w3gMj2gBUWvPQQTC74giRTjQU3EEXF51f17qQskgJsF7Qe` 2014-03-10T06:12:28Z
# End of private keys&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;Let&amp;rsquo;s see if the program we wrote in the last series of posts can compute the address (&lt;code&gt;1G9dbCmxtbaBQACVgcHWHJgyr8ZNCiVL9j&lt;/code&gt;) from the private key (&lt;code&gt;L3S9k3w3gMj2gBUWvPQQTC74giRTjQU3EEXF51f17qQskgJsF7Qe&lt;/code&gt;). The key is in base58 so we need convert to hex first.&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;$ racket
Welcome to Racket v6.0.0.3.
-&amp;gt; (require "priv2addr.rkt" "base58.rkt")
-&amp;gt; (define priv/hex (base58-str-&amp;gt;hex-str "L3S9k3w3gMj2gBUWvPQQTC74giRTjQU3EEXF51f17qQskgJsF7Qe"))
-&amp;gt; (priv-key-&amp;gt;addr priv/hex)
"1GoZxLR83RfoZeqzNSdTZuEb4vHAc6zFfc"
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;Hmm, we get the wrong address.&lt;/p&gt;&lt;/html&gt;</description></item></channel></rss>