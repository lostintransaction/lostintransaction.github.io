<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>My Awesome Blog: Posts tagged 'MultiBit'</title>
  <description>My Awesome Blog: Posts tagged 'MultiBit'</description>
  <link>http://www.example.com/tags/MultiBit.html</link>
  <lastBuildDate>Wed, 05 Mar 2014 06:44:02 UTC</lastBuildDate>
  <pubDate>Wed, 05 Mar 2014 06:44:02 UTC</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Verifying Hashes and Signatures</title>
   <link>http://www.example.com/blog/2014/03/05/verifying-hashes-and-signatures/?utm_source=MultiBit&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-03-05-verifying-hashes-and-signatures</guid>
   <pubDate>Wed, 05 Mar 2014 06:44:02 UTC</pubDate>
   <description>
&lt;html&gt;&lt;img src="http://www.example.com/img/1x1.gif?utm_source=MultiBit&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=%2Fblog%2F2014%2F03%2F05%2Fverifying-hashes-and-signatures%2F" height="1" width="1" /&gt;
 &lt;p&gt;&lt;em&gt;Replace this with your post text. Add one or more comma-separated Tags above. The special tag &lt;code&gt;DRAFT&lt;/code&gt; will prevent the post from being published.&lt;/em&gt;&lt;/p&gt;
 &lt;p&gt;Security is really important when handling bitcoins. One easy safeguard is to make sure the programs you download are actually what you think they are using hashes and signatures.&lt;/p&gt;
 &lt;p&gt;In this post, I essentially follow &lt;a href="https://multibit.org/blog/2013/07/24/how-to-check-signatures.html" title="MultiBit tutorial on hashes and signatures"&gt;the MultiBit tutorial&lt;/a&gt;. I&amp;rsquo;m using Windows 7 (64-bit).&lt;/p&gt;
 &lt;h1 id="verifying-hashes"&gt;Verifying Hashes&lt;/h1&gt;
 &lt;p&gt;A hash function maps its input to a number. The &lt;a href="http://en.wikipedia.org/wiki/SHA-1" title="SHA-1 Wikipedia entry"&gt;SHA&amp;ndash;1&lt;/a&gt; function maps inputs to 160-bit (40 hexadecial digit) numbers. Here&amp;rsquo;s the SHA&amp;ndash;1 (using Microsoft&amp;rsquo;s FCIV program) of the Hello World example from the MultiBit tutorial:&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;$ echo "Hello world" &amp;gt; example.txt
$ fciv -sha1 example.txt
//
// File Checksum Integrity Verifier version 2.05.
//
25e64db6d4d1d6116ffe0b317918c98f3624cbed example.txt&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;Note that when using Windows, the resulting hash is not the same as in the tutorial (ie, when using Linux) because the &lt;code&gt;examples.txt&lt;/code&gt; file has extra quotes, an extra space, and uses the windows &lt;code&gt;\r\n&lt;/code&gt; end-of-line instead of &lt;code&gt;\n&lt;/code&gt;. I simulated the Linux version of the example with a quick &lt;a href="http://racket-lang.org"&gt;Racket&lt;/a&gt; script:&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;$ racket
Welcome to Racket v6.0.0.3
&amp;gt; (with-output-to-file "example.txt" (lambda () (display "Hello world\n")))
&amp;gt; (exit)
$ fciv -sha1 example.txt
//
// File Checksum Integrity Verifier version 2.05.
//
33ab5639bfd8e7b95eb1d8d0b87781d4ffea4d5d example.txt&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;I found other people discussing the discrepancy &lt;a href="http://bitcoin.stackexchange.com/questions/14041/multibit-error-or-at-least-confusion-in-how-to-check-digital-signatures-in" title="Bitcoin StackExchange"&gt;here&lt;/a&gt;.&lt;/p&gt;
 &lt;p&gt;Most software you download from the internet should provide a hash that you can verify to make sure the file was not corrupted or altered. For example, Multibit provides SHA256 hashes &lt;a href="https://multibit.org/releases/multibit-0.5.17/release.txt" title="MultiBit 0.5.17 release notes"&gt;here&lt;/a&gt;.&lt;/p&gt;
 &lt;p&gt;Since FCIV only does SHA&amp;ndash;1, I needed something else that computes SHA&amp;ndash;256. A quick Google search turned up the &lt;a href="http://md5deep.sourceforge.net/"&gt;&lt;code&gt;md5deep&lt;/code&gt; library&lt;/a&gt;.&lt;/p&gt;
 &lt;p&gt;Since we are being paranoid here, let&amp;rsquo;s just make sure the program we need is &lt;a href="https://www.virustotal.com/en/file/eec0c765124b014c824db8759300f36b4a62b74ff81dfa68f77440389bb68d29/analysis/" title="sha256deep64.exe on virustotal"&gt;legit&lt;/a&gt;.&lt;/p&gt;
 &lt;p&gt;Now we&amp;rsquo;re finally ready to check the hash of MultiBit 0.5.17 for Windows.&lt;/p&gt;
 &lt;p&gt;From the &lt;a href="https://multibit.org/releases/multibit-0.5.17/release.txt" title="MultiBit 0.5.17 release notes"&gt;release file&lt;/a&gt;:&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;SHA256 hashes for files:
90506bf43a64986ce8219ca0fb18a5e1f0776cfeb31043ca848cea7f71eda45d  multibit-0.5.17-windows-setup.exe&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;Computing the hash:&lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;$ sha256deep64.exe multibit-0.5.17-windows-setup.exe
90506bf43a64986ce8219ca0fb18a5e1f0776cfeb31043ca848cea7f71eda45d  multibit-0.5.17-windows-setup.exe&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;And it matches!&lt;/p&gt;
 &lt;h1 id="verifying-signatures"&gt;Verifying Signatures&lt;/h1&gt;&lt;/html&gt;</description></item></channel></rss>